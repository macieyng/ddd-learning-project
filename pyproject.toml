[project]
name = "auctions"
version = "0.1.0"
description = "DDD learning project"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-random-order>=1.1.1",
]


[tool.pytest]
addopts = "-v --cov=uv --cov-report=term-missing --cov-report=html --random-order"
testpaths = "**/tests/**"

[tool.uv]
dev-dependencies = [
    "ruff>=0.7.0",
    "mypy>=1.12.1",
]


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
ignore = ["D", "ANN002", "ANN003", "ANN201", "ANN204", "COM812", "ISC001"]
select = ["ALL"]
fixable = ["ALL"]
dummy-variable-rgx = "^_|__$"


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.extend-per-file-ignores]
"**/tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
